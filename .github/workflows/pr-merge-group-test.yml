name: pr-merge-group-test

on:
  workflow_call:
    secrets:
      TOKEN:
        description: "GitHub App Token"
        required: false
      APPLICATION_ID:
        description: "The GitHub App ID"
        required: false
      APPLICATION_PRIVATE_KEY:
        description: "The GitHub App Private Key"
        required: false
      AWS_COMMERCIAL_ROLE_TO_ASSUME:
        description: "AWS IAM Role to assume"
        required: true
      AWS_GOVCLOUD_ROLE_TO_ASSUME:
        description: "AWS Govcloud IAM Role to assume"
        required: true

jobs:
  # on pull_request, report success for required status checks. this allows the testing to only run inside the merge queue.
  # "status-checks" is a json array of status checks to report the status for.
  # valid values for "status" are success, failure, error, pending
  report-success-status:
    if: github.event_name == 'pull_request'
    uses: defenseunicorns/delivery-github-actions-workflows/.github/workflows/report-status.yml@main
    secrets:
      APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
      APPLICATION_PRIVATE_KEY: ${{ secrets.APPLICATION_PRIVATE_KEY }}
    with:
      status-checks: '["test / e2e-commercial-insecure", "test / e2e-govcloud-secure"]'
      description: "automated report success in pull request"
      status: "success"

  # Run the E2E insecure tests in the commercial account only in the merge queue.
  e2e-commercial-insecure:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    steps:
      # check if there are any relevant changes to run the tests on
      # because we're watching .release-please-manifest.json, tests will always run on when using release please
      - uses: dorny/paths-filter@v2
        id: relevant_changes
        with:
          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
          filters: |
            changes:
              - '**/*.tf*'
              - test/**
              - .env
              - .release-please-manifest.json
              - go.mod
              - go.sum
              - Makefile

      - name: Report status success if no matching files
        if: steps.relevant_changes.outputs.changes == 'false'
        uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/report-status-context@main
        with:
          status-check: "test / e2e-commercial-insecure"
          status: "success"
          description: "no relevant changes to run tests on"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN }}

      - name: Run E2E commercial insecure tests
        if: steps.relevant_changes.outputs.changes == 'true'
        uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/e2e@main
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN }}
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          region: us-east-2
          github-context: "test / e2e-commercial-insecure"
          test-to-run: "insecure"

  # Get branch name from merge-group's PR
  get-branch-name:
    if: github.event_name == 'merge_group'
    runs-on: ubuntu-latest
    outputs:
      branch-name: ${{ steps.get_branch_name.outputs.pr_branch_name }}
    steps:
      - name: Get branch name
        id: get_branch_name
        run: |
          PR_NUMBER=$(echo $GITHUB_REF_NAME | grep -o 'pr-[0-9]*' | sed 's/pr-//')
          PR_URL="https://github.com/${GITHUB_REPOSITORY}/pull/${PR_NUMBER}"
          echo "pr_branch_name=$(gh pr view $PR_URL --json headRefName  | jq -r .headRefName) >> $GITHUB_OUTPUT"

  # Only Run the E2E secure tests in the govcloud account while in the merge queue when it is a release-please branch into main.
  # There is no direct way to determine if the  merge queued job is a release-please branch, so we check if this string is at the beginning of the commit message.
  e2e-govcloud-secure:
    if: github.event_name == 'merge_group'
    needs: get-branch-name
    runs-on: ubuntu-latest
    steps:
      # check if there are any relevant changes to run the tests on
      # because we're watching .release-please-manifest.json, tests will always run on when using release please
      - uses: dorny/paths-filter@v2
        id: relevant_changes
        with:
          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
          filters: |
            changes:
              - '**/*.tf*'
              - test/**
              - .env
              - .release-please-manifest.json
              - go.mod
              - go.sum
              - Makefile

      # if no matching relevant files or if not a release-please branch targeting main, report success
      - name: Report status success
        if: |
          steps.relevant_changes.outputs.changes == 'false' ||
          (steps.relevant_changes.outputs.changes == 'true' && needs.get-branch-name.outputs.branch-name != 'release-please--branches--main')
        uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/report-status-context@main
        with:
          status-check: "test / e2e-govcloud-secure"
          status: "success"
          description: "no relevant changes to run tests on"
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN }}

      # if there are matching relevant files and it is a release-please branch targeting main, run the tests
      - name: Run E2E govcloud secure tests
        if: |
          steps.relevant_changes.outputs.changes == 'true'  &&
          needs.get-branch-name.outputs.branch-name == 'release-please--branches--main'
        uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/e2e@main
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          token: ${{ secrets.TOKEN }}
          role-to-assume: ${{ secrets.AWS_GOVCLOUD_ROLE_TO_ASSUME }}
          region: us-gov-east-1
          github-context: "test / e2e-govcloud-secure"
          test-to-run: "secure"
