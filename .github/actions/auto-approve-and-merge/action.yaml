name: Auto approve and merge

description: Auto approve and merge

inputs:
  # either pass in a token, or an app id and private key
  token:
    description: 'The GitHub token to use for authentication'
    required: false
  application_id:
    description: 'The GitHub App ID'
    required: false
  application_private_key:
    description: 'The GitHub App private key'
    required: false
  branch:
    description: 'The branch to merge into'
    required: false
    default: 'main'
  checks:
    description: 'The checks to wait for before merging'
    required: false
    default: |-
      checks:
        - context: 'e2e-tests'
        - context: 'pre-commit-checks'

runs:
  using: composite
  steps:
    - name: Get token
      id: get_installation_token
      uses: peter-murray/workflow-application-token-action@v2
      if: ${{ !inputs.token }}
      with:
        application_id: ${{ inputs.application_id }}
        application_private_key: ${{ inputs.application_private_key }}

    - name: Auto approve
      uses: hmarr/auto-approve-action@v3
      with:
        github-token: ${{ inputs.token || steps.get_installation_token.outputs.token }}
        review-message: "Auto approved"

    - name: Workaround for GitHub Action not being able to do CODEOWNER approval or be a member of a team
      uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/repo-config@main
      with:
        application_id: ${{ inputs.application_id }}
        application_private_key: ${{ inputs.application_private_key }}
        token: ${{ inputs.token }}
        branch: ${{ inputs.branch }}
        checks: 'checks: []'
        require_code_owner_reviews: false

    - name: Auto Merge
      shell: bash -ex -o pipefail {0}
      env:
        GH_TOKEN: ${{ inputs.token || steps.get_installation_token.outputs.token }}
      run: |
        # GraphQL mutation as a string
        GRAPHQL_MUTATION='
          mutation enableAutoMerge($pullRequestId: ID!) {
            enablePullRequestAutoMerge(input: {
              pullRequestId: $pullRequestId
            }) {
              pullRequest {
                number
                autoMergeRequest {
                  enabledAt
                  enabledBy {
                    login
                  }
                }
              }
            }
          }
        '

        # Use jq to create the JSON payload
        JSON_PAYLOAD=$(jq -n \
                          --arg query "$GRAPHQL_MUTATION" \
                          --arg pullRequestId "${{ github.event.pull_request.node_id }}" \
                          '{query: $query, variables: {pullRequestId: $pullRequestId}}')

        # Use curl to send the GraphQL mutation
        curl -X POST \
            --fail-with-body \
            --oauth2-bearer "$(gh auth token)" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            https://api.github.com/graphql

    - name: sleep for 15 seconds to allow the pr to get into the merge queue
      if: always()
      shell: bash -e -o pipefail {0}
      run: sleep 15

    - name: Workaround for GitHub Action not being able to do CODEOWNER approval or be a member of a team, turn branch protection settings back on
      if: always()
      uses: defenseunicorns/delivery-github-actions-workflows/.github/actions/repo-config@main
      with:
        application_id: ${{ inputs.application_id }}
        application_private_key: ${{ inputs.application_private_key }}
        token: ${{ inputs.token }}
        branch: ${{ inputs.branch }}
        checks: ${{ inputs.checks }}
        require_code_owner_reviews: true
